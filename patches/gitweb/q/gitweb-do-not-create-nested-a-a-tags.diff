Subject: [PATCH] gitweb: do not create nested <a></a> tags

Nested <a></a> tags are not allowed.  They are not handled as intended
by browsers either.  Instead move the nested elements to just after
the link they were nested in which is the desired render location.

To restore the original, apparently intended, behavior some fancy css
along with an extra empty <a></a> tag is used.

Signed-off-by: Kyle J. McKay <mackyle@gmail.com>
---
 gitweb/gitweb.perl       | 32 +++++++++++++++++---------------
 gitweb/static/gitweb.css | 37 +++++++++++++++++++++++++++++++++----
 2 files changed, 50 insertions(+), 19 deletions(-)

diff --git a/gitweb/gitweb.perl b/gitweb/gitweb.perl
index 387ed1a2..9340ed36 100755
--- a/gitweb/gitweb.perl
+++ b/gitweb/gitweb.perl
@@ -2245,13 +2245,13 @@ sub format_ref_marker {
 					hash=>$dest
 				)}, $name);
 
-			$markers .= " <span class=\"".esc_attr($class)."\" title=\"".esc_attr($ref)."\">" .
+			$markers .= "<span class=\"".esc_attr($class)."\" title=\"".esc_attr($ref)."\">" .
 				$link . "</span>";
 		}
 	}
 
 	if ($markers) {
-		return ' <span class="refs">'. $markers . '</span>';
+		return '<span class="refs">'. $markers . '</span>';
 	} else {
 		return "";
 	}
@@ -4627,17 +4627,19 @@ sub format_log_nav {
 ## functions printing or outputting HTML: div
 
 sub git_print_header_div {
-	my ($action, $title, $hash, $hash_base) = @_;
+	my ($action, $title, $hash, $hash_base, $extra) = @_;
 	my %args = ();
+	defined $extra or $extra = '';
 
 	$args{'action'} = $action;
 	$args{'hash'} = $hash if $hash;
 	$args{'hash_base'} = $hash_base if $hash_base;
 
-	print "<div class=\"header\">\n" .
-	      $cgi->a({-href => href(%args), -class => "title"},
-	      $title ? $title : $action) .
-	      "\n</div>\n";
+	my $link1 = $cgi->a({-href => href(%args), -class => "title"},
+			    $title ? $title : $action);
+	my $link2 = $cgi->a({-href => href(%args), -class => "cover"}, "");
+	print "<div class=\"header\">\n" . '<span class="title">' .
+	      $link1 . $extra . $link2 . '</span>' . "\n</div>\n";
 }
 
 sub format_repo_url {
@@ -6235,8 +6237,8 @@ sub git_log_body {
 		my $ref = format_ref_marker($refs, $commit);
 		git_print_header_div('commit',
 		               "<span class=\"age\">$co{'age_string'}</span>" .
-		               esc_html($co{'title'}) . $ref,
-		               $commit);
+		               esc_html($co{'title'}),
+		               $commit, undef, $ref);
 		print "<div class=\"title_text\">\n" .
 		      "<div class=\"log_link\">\n" .
 		      $cgi->a({-href => href(action=>"commit", hash=>$commit)}, "commit") .
@@ -7628,11 +7630,11 @@ sub git_tree {
 			or die_error(404, "Reading tree failed");
 	}
 
-	my $refs = git_get_references();
-	my $ref = format_ref_marker($refs, $hash_base);
 	git_header_html();
 	my $basedir = '';
 	if (defined $hash_base && (my %co = parse_commit($hash_base))) {
+		my $refs = git_get_references();
+		my $ref = format_ref_marker($refs, $co{'id'});
 		my @views_nav = ();
 		if (defined $file_name) {
 			push @views_nav,
@@ -7649,7 +7651,7 @@ sub git_tree {
 		}
 		git_print_page_nav('tree','', $hash_base, undef, undef,
 		                   join(' | ', @views_nav));
-		git_print_header_div('commit', esc_html($co{'title'}) . $ref, $hash_base);
+		git_print_header_div('commit', esc_html($co{'title'}), $hash_base, undef, $ref);
 	} else {
 		undef $hash_base;
 		print "<div class=\"page_nav\">\n";
@@ -7993,9 +7995,9 @@ sub git_commit {
 	                   $formats_nav);
 
 	if (defined $co{'parent'}) {
-		git_print_header_div('commitdiff', esc_html($co{'title'}) . $ref, $hash);
+		git_print_header_div('commitdiff', esc_html($co{'title'}), $hash, undef, $ref);
 	} else {
-		git_print_header_div('tree', esc_html($co{'title'}) . $ref, $co{'tree'}, $hash);
+		git_print_header_div('tree', esc_html($co{'title'}), $co{'tree'}, $hash, $ref);
 	}
 	print "<div class=\"title_text\">\n" .
 	      "<table class=\"object_header\">\n";
@@ -8405,7 +8407,7 @@ sub git_commitdiff {
 
 		git_header_html(undef, $expires);
 		git_print_page_nav('commitdiff','', $hash,$co{'tree'},$hash, $formats_nav);
-		git_print_header_div('commit', esc_html($co{'title'}) . $ref, $hash);
+		git_print_header_div('commit', esc_html($co{'title'}), $hash, undef, $ref);
 		print "<div class=\"title_text\">\n" .
 		      "<table class=\"object_header\">\n";
 		git_print_authorship_rows(\%co);
diff --git a/gitweb/static/gitweb.css b/gitweb/static/gitweb.css
index 1b7a01bb..670cb209 100644
--- a/gitweb/static/gitweb.css
+++ b/gitweb/static/gitweb.css
@@ -97,20 +97,45 @@ div.page_body {
 	font-family: monospace;
 }
 
-div.title, a.title {
-	display: block;
+div.title, span.title {
 	padding: 6px 8px;
+}
+
+div.title, a.title, span.title {
 	font-weight: bold;
 	background-color: #edece6;
 	text-decoration: none;
 	color: #000000;
 }
 
+span.title {
+	position: relative;
+	z-index: 0;
+}
+
+a.cover {
+	position: absolute;
+	z-index: -1;
+	top: 0;
+	left: 0;
+	bottom: 0;
+	right: 0;
+}
+
+span.title a.title {
+	background-color: inherit;
+	text-decoration: inherit;
+}
+
+span.title {
+	display: block;
+}
+
 div.readme {
 	padding: 8px;
 }
 
-a.title:hover {
+span.title:hover {
 	background-color: #d9d8d1;
 }
 
@@ -591,7 +616,11 @@ a.rss_logo.generic:hover {
 }
 
 span.refs span {
-	padding: 0px 4px;
+	display: inline-block;
+	position: relative;
+	margin-left: 1ex;
+	padding: 0px 1ex;
+	bottom: 1px;
 	font-size: 70%;
 	font-weight: normal;
 	border: 1px solid;
---
