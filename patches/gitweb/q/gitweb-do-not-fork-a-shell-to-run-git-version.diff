Subject: [PATCH] gitweb: do not fork a shell to run `git version`

There's absolutely no reason to waste cycles forking not one,
but TWO processes to get this information that only serves
to leak information about the system to attackers.

However, gitweb may need to inspect the output to test for
the availablity of certain Git features.

Therefore, go ahead an run `git version`, but don't use a
sloppy qx(``) when we conveniently have available a cmd_pipe
function that avoids an extra fork of some indeterminate shell.

And then only save the version number to $git_vernum and leave
$git_version set to something that does not leak information
about the syatem that could be useful to attackers.

Signed-off-by: Kyle J. McKay <mackyle@gmail.com>
---
 gitweb/gitweb.perl | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/gitweb/gitweb.perl b/gitweb/gitweb.perl
index 33a83635..ab5f4dc4 100755
--- a/gitweb/gitweb.perl
+++ b/gitweb/gitweb.perl
@@ -853,9 +853,18 @@ sub get_loadavg {
 
 # version of the core git binary
 our $git_version;
+our $git_vernum = "0"; # guaranteed to always match /^\d+(\.\d+)*$/
 sub evaluate_git_version {
-	our $git_version = qx("$GIT" --version) =~ m/git version (.*)$/ ? $1 : "unknown";
-	$number_of_git_cmds++;
+	$git_version = $version; # don't leak system information to attackers
+	$git_vernum eq "0" or return; # don't run it again
+	sub cmd_pipe;
+	my $vers;
+	if (defined(my $fd = cmd_pipe $GIT, '--version')) {
+		$vers = <$fd>;
+		close $fd;
+		$number_of_git_cmds++;
+	}
+	$git_vernum = $1 if defined($vers) && $vers =~ /git\s+version\s+(\d+(?:\.\d+)*)$/io;
 }
 
 sub check_loadavg {
---
