Subject: [PATCH] gitweb: do not use undeclared entities

The XML specification requires that all XML processors
MUST recognize these five entities:

&lt;
&gt;
&amp;
&apos;
&quot;

whether the are declared or not.  Note that neither
&nbsp; nor &sdot; are listed.

That means &nbsp; and &sdot; can only be used if they
are declared otherwise a bad XML document will be
created.

Replace &nbsp; with &#160; and &sdot; with &#183;
so that declarations are not required.

Note that &sdot; is actually U+22C5 "DOT OPERATOR" which
is just wrong since we're displaying text not mathematical
formulas so we replace it with the much more correct
U+00B7 "MIDDLE DOT" instead.

We could just guarantee that the entities in question
are declared in the XML header, however, if that gets
stripped off leaving us with a bare html top-level
tag the document would become invalid, so we don't take
that route.

Signed-off-by: Kyle J. McKay <mackyle@gmail.com>
---
gitweb/gitweb.perl | 40 ++++++++++++++++++++--------------------
1 file changed, 20 insertions(+), 20 deletions(-)

diff --git a/gitweb/gitweb.perl b/gitweb/gitweb.perl
index a4eb570a..a8009d8d 100755
--- a/gitweb/gitweb.perl
+++ b/gitweb/gitweb.perl
@@ -1659,7 +1659,7 @@ sub esc_html {
 	$str = to_utf8($str);
 	$str = $cgi->escapeHTML($str);
 	if ($opts{'-nbsp'}) {
-		$str =~ s/ /&nbsp;/g;
+		$str =~ s/ /&#160;/g;
 	}
 	$str =~ s|([[:cntrl:]])|(($1 ne "\t") ? quot_cec($1) : $1)|eg;
 	return $str;
@@ -1675,7 +1675,7 @@ sub esc_path {
 	$str = to_utf8($str);
 	$str = $cgi->escapeHTML($str);
 	if ($opts{'-nbsp'}) {
-		$str =~ s/ /&nbsp;/g;
+		$str =~ s/ /&#160;/g;
 	}
 	$str =~ s|([[:cntrl:]])|quot_cec($1)|eg;
 	return $str;
@@ -2224,8 +2224,8 @@ sub gravatar_url {
 # is enabled.
 sub git_get_avatar {
 	my ($email, %opts) = @_;
-	my $pre_white  = ($opts{-pad_before} ? "&nbsp;" : "");
-	my $post_white = ($opts{-pad_after}  ? "&nbsp;" : "");
+	my $pre_white  = ($opts{-pad_before} ? "&#160;" : "");
+	my $post_white = ($opts{-pad_after}  ? "&#160;" : "");
 	$opts{-size} ||= 'default';
 	my $size = $avatar_size{$opts{-size}} || $avatar_size{'default'};
 	my $url = "";
@@ -3039,9 +3039,9 @@ sub git_populate_project_tagcloud {
 			# Pad the title with spaces so that the cloud looks
 			# less crammed.
 			my $title = esc_html($ctags_lc{$ctag}->{topname});
-			$title =~ s/ /&nbsp;/g;
-			$title =~ s/^/&nbsp;/g;
-			$title =~ s/$/&nbsp;/g;
+			$title =~ s/ /&#160;/g;
+			$title =~ s/^/&#160;/g;
+			$title =~ s/$/&#160;/g;
 			if (defined $matched && $matched eq $ctag) {
 				$title = qq(<span class="match">$title</span>);
 			}
@@ -4503,19 +4503,19 @@ sub format_paging_nav {
 	if ($page > 0) {
 		$paging_nav .=
 			$cgi->a({-href => href(-replay=>1, page=>undef)}, "first") .
-			" &sdot; " .
+			" &#183; " .
 			$cgi->a({-href => href(-replay=>1, page=>$page-1),
 			         -accesskey => "p", -title => "Alt-p"}, "prev");
 	} else {
-		$paging_nav .= "first &sdot; prev";
+		$paging_nav .= "first &#183; prev";
 	}
 
 	if ($has_next_link) {
-		$paging_nav .= " &sdot; " .
+		$paging_nav .= " &#183; " .
 			$cgi->a({-href => href(-replay=>1, page=>$page+1),
 			         -accesskey => "n", -title => "Alt-n"}, "next");
 	} else {
-		$paging_nav .= " &sdot; next";
+		$paging_nav .= " &#183; next";
 	}
 
 	return $paging_nav;
@@ -4974,7 +4974,7 @@ sub git_difftree_body {
 			               -title => 'commitdiff to parent number ' .
 			                          ($i+1) . ': ' . substr($par,0,7)},
 			              $i+1) .
-			      "&nbsp;</th>\n";
+			      "&#160;</th>\n";
 		}
 		print "</tr></thead>\n<tbody>\n";
 	}
@@ -6333,7 +6333,7 @@ sub git_tags_body {
 		if ($tag{'type'} eq "tag") {
 			print $cgi->a({-href => href(action=>"tag", hash=>$tag{'id'})}, "tag");
 		} else {
-			print "&nbsp;";
+			print "&#160;";
 		}
 		print "</td>\n" .
 		      "<td class=\"link\">" . " | " .
@@ -6508,20 +6508,20 @@ sub git_search_message {
 		$paging_nav .=
 			$cgi->a({-href => href(-replay=>1, page=>undef)},
 			        "first") .
-			" &sdot; " .
+			" &#183; " .
 			$cgi->a({-href => href(-replay=>1, page=>$page-1),
 			         -accesskey => "p", -title => "Alt-p"}, "prev");
 	} else {
-		$paging_nav .= "first &sdot; prev";
+		$paging_nav .= "first &#183; prev";
 	}
 	my $next_link = '';
 	if ($#commitlist >= 100) {
 		$next_link =
 			$cgi->a({-href => href(-replay=>1, page=>$page+1),
 			         -accesskey => "n", -title => "Alt-n"}, "next");
-		$paging_nav .= " &sdot; $next_link";
+		$paging_nav .= " &#183; $next_link";
 	} else {
-		$paging_nav .= " &sdot; next";
+		$paging_nav .= " &#183; next";
 	}
 
 	git_header_html();
@@ -6904,7 +6904,7 @@ sub git_summary {
 	git_header_html();
 	git_print_page_nav('summary','', $head);
 
-	print "<div class=\"title\">&nbsp;</div>\n";
+	print "<div class=\"title\">&#160;</div>\n";
 	print "<table class=\"projects_list\">\n" .
 	      "<tr id=\"metadata_desc\"><td>description</td><td>" . esc_html($descr) . "</td></tr>\n";
         if ($owner and not $omit_owner) {
@@ -7598,7 +7598,7 @@ sub git_tree {
 		undef $up unless $up;
 		# based on git_print_tree_entry
 		print '<td class="mode">' . mode_str('040000') . "</td>\n";
-		print '<td class="size">&nbsp;</td>'."\n" if $show_sizes;
+		print '<td class="size">&#160;</td>'."\n" if $show_sizes;
 		print '<td class="list">';
 		print $cgi->a({-href => href(action=>"tree",
 		                             hash_base=>$hash_base,
@@ -7816,7 +7816,7 @@ sub git_log_generic {
 	my ($patch_max) = gitweb_get_feature('patches');
 	if ($patch_max && !defined $file_name) {
 		if ($patch_max < 0 || @commitlist <= $patch_max) {
-			$paging_nav .= " &sdot; " .
+			$paging_nav .= " &#183; " .
 				$cgi->a({-href => href(action=>"patches", -replay=>1)},
 					"patches");
 		}
---
