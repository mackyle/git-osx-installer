Subject: [PATCH] gitweb: extra columns in blame

This patch adds extra columns to blame output, containing
line author and creation date. These columns are by default hidden by
display: none but by clicking on the expansion "button" you can display
them (and hide again). I think seeing this information without tooltips
fishing can give much better overview of the content evolution.

Signed-off-by: Petr Baudis <pasky@ucw.cz>
Signed-off-by: Kyle J. McKay <mackyle@gmail.com>
---
gitweb/gitweb.perl                       | 14 ++++--
gitweb/static/gitweb.css                 |  5 ++
gitweb/static/js/blame_incremental.js    | 86 ++++++++++++++++++++++++++++++--
gitweb/static/js/javascript-detection.js |  4 +-
4 files changed, 101 insertions(+), 8 deletions(-)

diff --git a/gitweb/gitweb.perl b/gitweb/gitweb.perl
index 32ee4055..0e5514be 100755
--- a/gitweb/gitweb.perl
+++ b/gitweb/gitweb.perl
@@ -6816,7 +6816,11 @@ sub git_blame_common {
 	print qq!<table id="blame_table" class="blame" width="100%">\n!.
 	      #qq!<col width="5.5em" /><col width="2.5em" /><col width="*" />\n!.
 	      qq!<thead>\n!.
-	      qq!<tr><th>Commit</th><th>Line</th><th>Data</th></tr>\n!.
+	      qq!<tr><th nowrap="nowrap" style="white-space:nowrap">!.
+	      qq!Commit&#160;<a href="javascript:extra_blame_columns()" id="columns_expander" !.
+	      qq!title="toggles blame author information display">[+]</a></th>!.
+	      qq!<th class="extra_column">Author</th><th class="extra_column">Date</th>!.
+	      qq!<th>Line</th><th width="100%">Data</th></tr>\n!.
 	      qq!</thead>\n!.
 	      qq!<tbody>\n!;
 
@@ -6836,6 +6840,8 @@ sub git_blame_common {
 
 			print qq!<tr id="l$linenr" class="$color_class">!.
 			      qq!<td class="sha1"><a href=""> </a></td>!.
+			      qq!<td class="extra_column" nowrap="nowrap"></td>!.
+			      qq!<td class="extra_column" nowrap="nowrap"></td>!.
 			      qq!<td class="linenr">!.
 			      qq!<a class="linenr" href="">$linenr</a></td>!;
 			print qq!<td class="pre">! . esc_html($line) . "</td>\n";
@@ -6882,10 +6888,10 @@ sub git_blame_common {
 			$tr_class .= ' multiple-previous' if ($meta->{'nprevious'} > 1);
 			print "<tr id=\"l$lineno\" class=\"$tr_class\">\n";
 			if ($group_size) {
+				my $rowspan = $group_size > 1 ? " rowspan=\"$group_size\"" : "";
 				print "<td class=\"sha1\"";
 				print " title=\"". esc_html($author) . ", $date\"";
-				print " rowspan=\"$group_size\"" if ($group_size > 1);
-				print ">";
+				print "$rowspan>";
 				print $cgi->a({-href => href(action=>"commit",
 				                             hash=>$full_rev,
 				                             file_name=>$file_name)},
@@ -6899,6 +6905,8 @@ sub git_blame_common {
 					}
 				}
 				print "</td>\n";
+				print "<td class=\"extra_column\" nowrap=\"nowrap\"$rowspan>". esc_html($author) . "</td>";
+				print "<td class=\"extra_column\" nowrap=\"nowrap\"$rowspan>". $date . "</td>";
 			}
 			# 'previous' <sha1 of parent commit> <filename at commit>
 			if (exists $meta->{'previous'} &&
diff --git a/gitweb/static/gitweb.css b/gitweb/static/gitweb.css
index 02cced9a..77e272e3 100644
--- a/gitweb/static/gitweb.css
+++ b/gitweb/static/gitweb.css
@@ -628,6 +628,11 @@ div.binary {
 	font-style: italic;
 }
 
+.extra_column {
+	display: none;
+	white-space: nowrap;
+}
+
 div.remote {
 	margin: .5em;
 	border: 1px solid #d9d8d1;
diff --git a/gitweb/static/js/blame_incremental.js b/gitweb/static/js/blame_incremental.js
index db6eb505..d3144e46 100644
--- a/gitweb/static/js/blame_incremental.js
+++ b/gitweb/static/js/blame_incremental.js
@@ -298,6 +298,63 @@ function fixColorsAndGroups() {
 /* ============================================================ */
 /* main part: parsing response */
 
+// blame extra columns
+
+// I would like to note here that JavaScript is utterly stupid.
+function findStyleRuleInStyleSheet(styleName, styleSheet)
+{
+	var cssRules, j;
+	if (styleSheet) {
+		// MSIE has .rules, Mozilla has .cssRules
+		cssRules = styleSheet.cssRules ? styleSheet.cssRules : styleSheets.rules;
+	}
+	if (!styleName || !cssRules || !cssRules.length) {
+		return null;
+	}
+	for (j = 0; j < cssRules.length; j++) {
+		var rule = cssRules[j];
+		if (rule.selectorText && rule.selectorText.toLowerCase() == styleName) {
+			return rule;
+		}
+		if (rule.styleSheet) {
+			var ans = findStyleRuleInStyleSheet(styleName, rule.styleSheet);
+			if (ans) {
+				return ans;
+			}
+		}
+	}
+	return null;
+}
+
+function findStyleRule(styleName) {
+	var i;
+	for (i = 0; i < document.styleSheets.length; i++) {
+		var ans = findStyleRuleInStyleSheet(styleName, document.styleSheets[i]);
+		if (ans) {
+			return ans;
+		}
+	}
+	return null;
+}
+
+var isIE = (navigator.appName.toLowerCase().indexOf("microsoft") != -1);
+var extra_columns = 0;
+var extra_column_rule = null;
+function extra_blame_columns() {
+	if (!extra_column_rule)
+		extra_column_rule = findStyleRule(".extra_column");
+
+	if (!extra_columns) {
+		document.getElementById("columns_expander").firstChild.data = "[-]";
+		extra_column_rule.style.display = isIE ? "inline" : "table-cell";
+		extra_columns = 1;
+	} else {
+		document.getElementById("columns_expander").firstChild.data = "[+]";
+		extra_column_rule.style.display = "none";
+		extra_columns = 0;
+	}
+}
+
 /**
  * Function called for each blame entry, as soon as it finishes.
  * It updates page via DOM manipulation, adding sha1 info, etc.
@@ -323,10 +380,13 @@ function handleLine(commit, group) {
 	var resline = group.resline;
 
 	// format date and time string only once per commit
+	if (!commit.datetime) {
+		commit.datetime =
+			formatDateISOLocal(commit.authorTime, commit.authorTimezone);
+	}
 	if (!commit.info) {
 		/* e.g. 'Kay Sievers, 2005-08-07 21:49:46 +0200' */
-		commit.info = commit.author + ', ' +
-			formatDateISOLocal(commit.authorTime, commit.authorTimezone);
+		commit.info = commit.author + ', ' + commit.datetime;
 	}
 
 	// color depends on group of lines, not only on blamed commit
@@ -350,7 +410,9 @@ function handleLine(commit, group) {
 		*/
 		var td_sha1  = tr.firstChild;
 		var a_sha1   = td_sha1.firstChild;
-		var a_linenr = td_sha1.nextSibling.firstChild;
+		var td_auth  = td_sha1.nextSibling;
+		var td_date  = td_sha1.nextSibling.nextSibling;
+		var a_linenr = td_sha1.nextSibling.nextSibling.nextSibling.firstChild;
 
 		/* <tr id="l123" class=""> */
 		var tr_class = '';
@@ -396,8 +458,26 @@ function handleLine(commit, group) {
 					}
 				}
 			}
+			td_auth.rowSpan = group.numlines;
+			if (td_auth.firstChild) {
+				td_auth.firstChild.data = commit.author;
+			} else {
+				td_auth.appendChild(
+					document.createTextNode(commit.author));
+			}
+			td_date.rowSpan = group.numlines;
+			if (td_date.firstChild) {
+				td_date.firstChild.data = commit.datetime;
+			} else {
+				td_date.appendChild(
+					document.createTextNode(commit.datetime));
+			}
 		} else {
+			//tr.removeChild(td_date); // DOM2 Core way
+			//tr.removeChild(td_auth); // DOM2 Core way
 			//tr.removeChild(td_sha1); // DOM2 Core way
+			tr.deleteCell(2); // DOM2 HTML way
+			tr.deleteCell(1); // DOM2 HTML way
 			tr.deleteCell(0); // DOM2 HTML way
 		}
 
diff --git a/gitweb/static/js/javascript-detection.js b/gitweb/static/js/javascript-detection.js
index fa2596f7..09dcaa64 100644
--- a/gitweb/static/js/javascript-detection.js
+++ b/gitweb/static/js/javascript-detection.js
@@ -16,10 +16,10 @@
  * and other reasons to not add 'js=1' param at the end of link
  * @constant
  */
-var jsExceptionsRe = /[;?]js=[01](#.*)?$/;
+var jsExceptionsRe = /(^javascript:)|([;?]js=[01](#.*)?$)/;
 
 /**
- * Add '?js=1' or ';js=1' to the end of every link in the document
+ * Add '?js=1' or ';js=1' to the end of every non-javascript link in the document
  * that doesn't have 'js' query parameter set already.
  *
  * Links with 'js=1' lead to JavaScript version of given action, if it
---
