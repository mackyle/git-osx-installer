Subject: [PATCH] imap-send.c: improve cURL and __APPLE__ support

If USE_CURL_FOR_IMAP_SEND is defined and NO_OPENSSL_IMAP is defined
AND BOTH APPLE_COMMON_CRYPTO AND EVP_DecodeBlock are defined, then
support CRAM-MD5 in the tunnel.

Signed-off-by: Kyle J. McKay <mackyle@gmail.com>

---
 imap-send.c | 30 ++++++++++++++++++++----------
 1 file changed, 20 insertions(+), 10 deletions(-)

diff --git a/imap-send.c b/imap-send.c
index 4d3b7737..6197a7a2 100644
--- a/imap-send.c
+++ b/imap-send.c
@@ -34,7 +34,7 @@ typedef void *SSL;
 #include "http.h"
 #endif
 
-#if defined(USE_CURL_FOR_IMAP_SEND) && defined(NO_OPENSSL)
+#if defined(USE_CURL_FOR_IMAP_SEND) && (defined(NO_OPENSSL) || defined(NO_OPENSSL_IMAP))
 /* only available option */
 #define USE_CURL_DEFAULT 1
 #else
@@ -185,7 +185,7 @@ static const char *cap_list[] = {
 static int get_cmd_result(struct imap_store *ctx, struct imap_cmd *tcmd);
 
 
-#ifndef NO_OPENSSL
+#if !(defined(NO_OPENSSL) || defined(NO_OPENSSL_IMAP))
 static void ssl_socket_perror(const char *func)
 {
 	fprintf(stderr, "%s: %s\n", func, ERR_error_string(ERR_get_error(), NULL));
@@ -194,7 +194,7 @@ static void ssl_socket_perror(const char *func)
 
 static void socket_perror(const char *func, struct imap_socket *sock, int ret)
 {
-#ifndef NO_OPENSSL
+#if !(defined(NO_OPENSSL) || defined(NO_OPENSSL_IMAP))
 	if (sock->ssl) {
 		int sslerr = SSL_get_error(sock->ssl, ret);
 		switch (sslerr) {
@@ -217,7 +217,7 @@ static void socket_perror(const char *func, struct imap_socket *sock, int ret)
 	}
 }
 
-#ifdef NO_OPENSSL
+#if defined(NO_OPENSSL) || defined(NO_OPENSSL_IMAP)
 static int ssl_socket_connect(struct imap_socket *sock, int use_tls_only, int verify)
 {
 	fprintf(stderr, "SSL requested but SSL support not compiled in\n");
@@ -353,7 +353,7 @@ static int ssl_socket_connect(struct imap_socket *sock, int use_tls_only, int ve
 static int socket_read(struct imap_socket *sock, char *buf, int len)
 {
 	ssize_t n;
-#ifndef NO_OPENSSL
+#if !(defined(NO_OPENSSL) || defined(NO_OPENSSL_IMAP))
 	if (sock->ssl)
 		n = SSL_read(sock->ssl, buf, len);
 	else
@@ -371,7 +371,7 @@ static int socket_read(struct imap_socket *sock, char *buf, int len)
 static int socket_write(struct imap_socket *sock, const char *buf, int len)
 {
 	int n;
-#ifndef NO_OPENSSL
+#if !(defined(NO_OPENSSL) || defined(NO_OPENSSL_IMAP))
 	if (sock->ssl)
 		n = SSL_write(sock->ssl, buf, len);
 	else
@@ -388,7 +388,7 @@ static int socket_write(struct imap_socket *sock, const char *buf, int len)
 
 static void socket_shutdown(struct imap_socket *sock)
 {
-#ifndef NO_OPENSSL
+#if !(defined(NO_OPENSSL) || defined(NO_OPENSSL_IMAP))
 	if (sock->ssl) {
 		SSL_shutdown(sock->ssl);
 		SSL_free(sock->ssl);
@@ -847,7 +847,12 @@ static void imap_close_store(struct imap_store *ctx)
 	free(ctx);
 }
 
-#ifndef NO_OPENSSL
+/* If NO_OPENSSL is defined then no tunnel CRAM-MD5 support.  Period.
+ * If NO_OPENSSL_IMAP is defined then no tunnel CRAM-MD5 support
+ * UNLESS BOTH APPLE_COMMON_CRYPTO AND EVP_DecodeBlock are defined
+ */
+#if !defined(NO_OPENSSL) && \
+    (!defined(NO_OPENSSL_IMAP) || (defined(APPLE_COMMON_CRYPTO) && defined(EVP_DecodeBlock)))
 
 /*
  * hexchar() and cram() functions are based on the code from the isync
@@ -1066,7 +1071,7 @@ static struct imap_store *imap_open_store(struct imap_server_conf *srvc, char *f
 		goto bail;
 
 	if (!preauth) {
-#ifndef NO_OPENSSL
+#if !(defined(NO_OPENSSL) || defined(NO_OPENSSL_IMAP))
 		if (!srvc->use_ssl && CAP(STARTTLS)) {
 			if (imap_exec(ctx, NULL, "STARTTLS") != RESP_OK)
 				goto bail;
@@ -1518,13 +1523,18 @@ int main(int argc, char **argv)
 		warning("--curl not supported in this build");
 		use_curl = 0;
 	}
-#elif defined(NO_OPENSSL)
+#elif defined(NO_OPENSSL) || defined(NO_OPENSSL_IMAP)
 	if (!use_curl) {
 		warning("--no-curl not supported in this build");
 		use_curl = 1;
 	}
 #endif
 
+#if defined(NO_OPENSSL) || defined(NO_OPENSSL_IMAP)
+	if (server.tunnel)
+		server.use_ssl = 0;
+#endif
+
 	if (!server.port)
 		server.port = server.use_ssl ? 993 : 143;
 
---
