From 98a38c82739063d3c02b17e8df2ed123321bf267 Mon Sep 17 00:00:00 2001
From: "Kyle J. McKay" <mackyle@gmail.com>
Date: Sun, 8 Feb 2015 06:53:56 -0800
Subject: [PATCH] gitweb.perl: find project dirs with .git gitdir: links

If .git is a file with a gitdir: link and the link is
relatave and does not escape the projectroot then add
it to the projects list when searching a directory for
projects.

Signed-off-by: Kyle J. McKay <mackyle@gmail.com>
---
 gitweb/gitweb.perl | 37 +++++++++++++++++++++++++++++++++++++
 1 file changed, 37 insertions(+)

diff --git a/gitweb/gitweb.perl b/gitweb/gitweb.perl
index 7a5b23ac..f492f789 100755
--- a/gitweb/gitweb.perl
+++ b/gitweb/gitweb.perl
@@ -3055,6 +3055,43 @@ sub git_get_projects_list {
 				our $projectroot;
 				# skip project-list toplevel, if we get it.
 				return if (m!^[/.]$!);
+				# check for .git gitdir: file
+				if (-f $_ && $_ eq '.git') {
+					open(my $f, '<', $_) or return;
+					my $link = <$f>;
+					close($f);
+					chomp($link);
+					return unless $link =~ /^gitdir:\s*(.*)$/;
+					$link = $1;
+					$link =~ s,//+,/,g; # normalize // sequences
+					return if $link =~ m,^/,; # no absolute links
+					$link =~ s,/\.?$,,; # no trailing / or /.
+					$link =~ s,/\./,/,g; # remove ./ sequences
+					$link =~ s,^\./,,; # remove initial ./ sequence
+					return if $link =~ m,^\.?$,; # ignore empty or .
+					return unless $link =~ m,^((?:\.\./)*)(.+)$,;
+					my ($up, $down) = ($1, $2);
+					return if $down =~ m,/\.\./, || $down =~ m,/\.\.$,;
+					my $upcnt = scalar($up =~ m|/|g);
+					my $base = substr($File::Find::dir, $pfxlen);
+					$base =~ s,/$,,;
+					while ($upcnt--) {
+						if ($base =~ m,^(.*)/[^/]+$,) {
+						  $base = $1;
+						} else {
+						  return;  # tried to climb out of projects dir
+						}
+					}
+					my $testdir = "$dir$base/$down";
+					return unless (-d $testdir);
+					if ($paranoid && $filter && substr($testdir, $pfxlen + 1) !~ m!^\Q$filter\E/!) {
+						next;
+					}
+					if (check_export_ok("$projectroot$base/$down")) {
+						push @list, { path => substr("$base/$down", 1) };
+					}
+					return;
+				}
 				# only directories can be git repositories
 				return unless (-d $_);
 				# don't traverse too deep (Find is super slow on os x)
--
