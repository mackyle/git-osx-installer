Subject: [PATCH] ssl: add support for ssl.cadn-file

If ssl.cadn-file is not set, fallback to ssl.ca-file.

The ssl.cadn-file option provides independent control of
the "certificate_authorities" field (see RFC 5246 section
7.4.4 Certificate Request) separate from the actual list
of trusted certificate authorities used for client
certificate verification.

It may be necessary to send a hint that includes the DN
of a non-root client CA in order to receive the correct
certificate from the client, but such a non-root CA really
does not belong in the trusted client root CA list.

Signed-off-by: Kyle J. McKay <mackyle@gmail.com>

---
 src/base.h       | 1 +
 src/configfile.c | 9 +++++++++
 src/network.c    | 9 ++++++++-
 src/server.c     | 1 +
 4 files changed, 19 insertions(+), 1 deletion(-)

diff --git a/src/base.h b/src/base.h
index 12c91d2f..e0c76248 100644
--- a/src/base.h
+++ b/src/base.h
@@ -273,6 +273,7 @@ typedef struct {
 	/* server wide */
 	buffer *ssl_pemfile;
 	buffer *ssl_ca_file;
+	buffer *ssl_cadn_file;
 	buffer *ssl_cipher_list;
 	buffer *ssl_dh_file;
 	buffer *ssl_ec_curve;
diff --git a/src/configfile.c b/src/configfile.c
index 8d47ae61..a39d3051 100644
--- a/src/configfile.c
+++ b/src/configfile.c
@@ -108,6 +108,7 @@ static int config_insert(server *srv) {
 		{ "ssl.honor-cipher-order",            NULL, T_CONFIG_BOOLEAN, T_CONFIG_SCOPE_CONNECTION }, /* 66 */
 		{ "ssl.empty-fragments",               NULL, T_CONFIG_BOOLEAN, T_CONFIG_SCOPE_CONNECTION }, /* 67 */
 		{ "server.upload-temp-file-size",      NULL, T_CONFIG_INT,     T_CONFIG_SCOPE_SERVER     }, /* 68 */
+		{ "ssl.cadn-file",                     NULL, T_CONFIG_STRING,  T_CONFIG_SCOPE_CONNECTION }, /* 69 */
 
 		{ "server.host",
 			"use server.bind instead",
@@ -187,6 +188,7 @@ static int config_insert(server *srv) {
 		s->server_name   = buffer_init();
 		s->ssl_pemfile   = buffer_init();
 		s->ssl_ca_file   = buffer_init();
+		s->ssl_cadn_file = buffer_init();
 		s->error_handler = buffer_init();
 		s->server_tag    = buffer_init();
 		s->ssl_cipher_list = buffer_init();
@@ -281,6 +283,7 @@ static int config_insert(server *srv) {
 		cv[65].destination = &(s->ssl_disable_client_renegotiation);
 		cv[66].destination = &(s->ssl_honor_cipher_order);
 		cv[67].destination = &(s->ssl_empty_fragments);
+		cv[69].destination = s->ssl_cadn_file;
 
 		srv->config_storage[i] = s;
 
@@ -359,6 +362,7 @@ int config_setup_connection(server *srv, connection *con) {
 	PATCH(ssl_pemfile_pkey);
 #endif
 	PATCH(ssl_ca_file);
+	PATCH(ssl_cadn_file);
 #ifdef USE_OPENSSL
 	PATCH(ssl_ca_file_cert_names);
 #endif
@@ -437,6 +441,11 @@ int config_patch_connection(server *srv, connection *con, comp_key_t comp) {
 #ifdef USE_OPENSSL
 				PATCH(ssl_ca_file_cert_names);
 #endif
+			} else if (buffer_is_equal_string(du->key, CONST_STR_LEN("ssl.cadn-file"))) {
+				PATCH(ssl_cadn_file);
+#ifdef USE_OPENSSL
+				PATCH(ssl_ca_file_cert_names);
+#endif
 			} else if (buffer_is_equal_string(du->key, CONST_STR_LEN("ssl.honor-cipher-order"))) {
 				PATCH(ssl_honor_cipher_order);
 			} else if (buffer_is_equal_string(du->key, CONST_STR_LEN("ssl.empty-fragments"))) {
diff --git a/src/network.c b/src/network.c
index fd77fc34..e74b1a7a 100644
--- a/src/network.c
+++ b/src/network.c
@@ -765,8 +765,15 @@ int network_init(server *srv) {
 			if (network_openssl_load_pemfile(srv, i)) return -1;
 		}
 
+		if (!buffer_string_is_empty(s->ssl_cadn_file)) {
+			s->ssl_ca_file_cert_names = SSL_load_client_CA_file(s->ssl_cadn_file->ptr);
+			if (NULL == s->ssl_ca_file_cert_names) {
+				log_error_write(srv, __FILE__, __LINE__, "ssb", "SSL:",
+						ERR_error_string(ERR_get_error(), NULL), s->ssl_cadn_file);
+			}
+		}
 
-		if (!buffer_string_is_empty(s->ssl_ca_file)) {
+		if (NULL == s->ssl_ca_file_cert_names && !buffer_string_is_empty(s->ssl_ca_file)) {
 			s->ssl_ca_file_cert_names = SSL_load_client_CA_file(s->ssl_ca_file->ptr);
 			if (NULL == s->ssl_ca_file_cert_names) {
 				log_error_write(srv, __FILE__, __LINE__, "ssb", "SSL:",
diff --git a/src/server.c b/src/server.c
index 997129d0..c5845e2c 100644
--- a/src/server.c
+++ b/src/server.c
@@ -305,6 +305,7 @@ static void server_free(server *srv) {
 			buffer_free(s->server_tag);
 			buffer_free(s->ssl_pemfile);
 			buffer_free(s->ssl_ca_file);
+			buffer_free(s->ssl_cadn_file);
 			buffer_free(s->ssl_cipher_list);
 			buffer_free(s->ssl_dh_file);
 			buffer_free(s->ssl_ec_curve);
---
