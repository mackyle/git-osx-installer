Received: by 10.52.240.3 with SMTP id vw3csp29458vdc;
        Tue, 18 Nov 2014 05:56:07 -0800 (PST)
X-Received: by 10.70.93.104 with SMTP id ct8mr37072517pdb.72.1416318966284;
        Tue, 18 Nov 2014 05:56:06 -0800 (PST)
Return-Path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id ph6si23159463pdb.16.2014.11.18.05.55.25
        for <multiple recipients>;
        Tue, 18 Nov 2014 05:56:06 -0800 (PST)
Received-SPF: none (google.com: git-owner@vger.kernel.org does not designate permitted sender hosts) client-ip=209.132.180.67;
Authentication-Results: mx.google.com;
       spf=neutral (google.com: git-owner@vger.kernel.org does not designate permitted sender hosts) smtp.mail=git-owner@vger.kernel.org
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753817AbaKRNvU (ORCPT <rfc822;touch21st@gmail.com> + 99 others);
	Tue, 18 Nov 2014 08:51:20 -0500
Received: from alum-mailsec-scanner-4.mit.edu ([18.7.68.15]:51361 "EHLO
	alum-mailsec-scanner-4.mit.edu" rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1753511AbaKRNvU (ORCPT
	<rfc822;git@vger.kernel.org>); Tue, 18 Nov 2014 08:51:20 -0500
X-AuditID: 1207440f-f792a6d000001284-f8-546b4ecd90bc
Received: from outgoing-alum.mit.edu (OUTGOING-ALUM.MIT.EDU [18.7.68.33])
	by alum-mailsec-scanner-4.mit.edu (Symantec Messaging Gateway) with SMTP id 25.1D.04740.DCE4B645; Tue, 18 Nov 2014 08:51:09 -0500 (EST)
Received: from michael.fritz.box (p5DDB3D42.dip0.t-ipconnect.de [93.219.61.66])
	(authenticated bits=0)
        (User authenticated as mhagger@ALUM.MIT.EDU)
	by outgoing-alum.mit.edu (8.13.8/8.12.4) with ESMTP id sAIDoRUe004896
	(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=NOT);
	Tue, 18 Nov 2014 08:51:07 -0500
From:	Michael Haggerty <mhagger@alum.mit.edu>
To:	Junio C Hamano <gitster@pobox.com>
Cc:	Eric Wong <normalperson@yhbt.net>,
	Karsten Blees <karsten.blees@gmail.com>,
	Stefan Beller <stefanbeller@gmail.com>,
	=?UTF-8?q?Torsten=20B=C3=B6gershausen?= <tboegi@web.de>,
	Matthieu Moy <Matthieu.Moy@imag.fr>,
	Eric Sunshine <sunshine@sunshineco.com>,
	Johannes Sixt <j6t@kdbg.org>, git@vger.kernel.org,
	Michael Haggerty <mhagger@alum.mit.edu>
Subject: [PATCH v3 1/1] create_default_files(): don't set u+x bit on $GIT_DIR/config
Date:	Tue, 18 Nov 2014 14:50:24 +0100
Message-Id: <1416318624-23048-2-git-send-email-mhagger@alum.mit.edu>
X-Mailer: git-send-email 2.1.3
In-Reply-To: <1416318624-23048-1-git-send-email-mhagger@alum.mit.edu>
References: <1416318624-23048-1-git-send-email-mhagger@alum.mit.edu>
Sender:	git-owner@vger.kernel.org
Precedence: bulk
List-ID: <git.vger.kernel.org>
X-Mailing-List:	git@vger.kernel.org

Since time immemorial, the test of whether to set "core.filemode" has
been done by trying to toggle the u+x bit on $GIT_DIR/config and then
testing whether the change "took". I find it somewhat odd to use the
config file for this test, but whatever.

The test code didn't set the u+x bit back to its original state
itself, instead relying on the subsequent call to git_config_set() to
re-write the config file with correct permissions.

But ever since

    daa22c6f8d config: preserve config file permissions on edits (2014-05-06)

git_config_set() copies the permissions from the old config file to
the new one. This is a good change in and of itself, but it interacts
badly with create_default_files()'s sloppiness, causing "git init" to
leave the executable bit set on $GIT_DIR/config.

So change create_default_files() to reset the permissions on
$GIT_DIR/config after its test.

Signed-off-by: Michael Haggerty <mhagger@alum.mit.edu>
---
 builtin/init-db.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/builtin/init-db.c b/builtin/init-db.c
index 56f85e2..a6d58fd 100644
--- a/builtin/init-db.c
+++ b/builtin/init-db.c
@@ -254,7 +254,8 @@ static int create_default_files(const char *template_path)
 		struct stat st2;
 		filemode = (!chmod(path, st1.st_mode ^ S_IXUSR) &&
 				!lstat(path, &st2) &&
-				st1.st_mode != st2.st_mode);
+				st1.st_mode != st2.st_mode &&
+				!chmod(path, st1.st_mode));
 	}
 	git_config_set("core.filemode", filemode ? "true" : "false");
 
