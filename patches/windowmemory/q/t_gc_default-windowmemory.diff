Subject: [PATCH] pack-objects.c: change pack.windowmemory default

The default value of pack.windowmemory = 0 allows unlimited memory
use while repacking.  In the case of a gc --aggressive running with
a 64-bit memory space, this can easily lead to memory thrashing and
bring the system to its knees.

Instead of using a default pack.windowmemory = 0 value, use a default
value of system-memory-size / 3 / number-of-packing-threads but cap
it to no more than SSIZE_MAX to avoid potential arithmetic issues.

The memory thrashing behavior can still be restored by explicitly
setting pack.windowmemory = 0 in a config file or using an explicit
--window-memory=0 option.

However, if the system memory size cannot be determined, the default
value will still be unlimited memory use.

Signed-off-by: Kyle J. McKay <mackyle@gmail.com>

---
 Documentation/config.txt |  6 ++++--
 builtin/pack-objects.c   | 33 +++++++++++++++++++++++++++++++--
 2 files changed, 35 insertions(+), 4 deletions(-)

diff --git a/Documentation/config.txt b/Documentation/config.txt
index 6ad3eb66..9548fe89 100644
--- a/Documentation/config.txt
+++ b/Documentation/config.txt
@@ -2141,8 +2141,10 @@ pack.windowMemory::
 	The maximum size of memory that is consumed by each thread
 	in linkgit:git-pack-objects[1] for pack window memory when
 	no limit is given on the command line.  The value can be
-	suffixed with "k", "m", or "g".  When left unconfigured (or
-	set explicitly to 0), there will be no limit.
+	suffixed with "k", "m", or "g".  When left unconfigured the
+	default is based on the system's memory size and the number of
+	packing threads in use.  If set explicitly to 0 (or the system's
+	memory size cannot be determined), there will be no limit.
 
 pack.compression::
 	An integer -1..9, indicating the compression level for objects
diff --git a/builtin/pack-objects.c b/builtin/pack-objects.c
index f854ca42..5374ee32 100644
--- a/builtin/pack-objects.c
+++ b/builtin/pack-objects.c
@@ -19,11 +19,18 @@
 #include "refs.h"
 #include "streaming.h"
 #include "thread-utils.h"
+#include "sys-utils.h"
 #include "pack-bitmap.h"
 #include "reachable.h"
 #include "sha1-array.h"
 #include "argv-array.h"
 
+#if SSIZE_MAX <= LONG_MAX
+#define WINDOW_MEMORY_MAX ((long)SSIZE_MAX)
+#else
+#define WINDOW_MEMORY_MAX LONG_MAX
+#endif
+
 static const char *pack_usage[] = {
 	N_("git pack-objects --stdout [<options>...] [< <ref-list> | < <object-list>]"),
 	N_("git pack-objects [<options>...] <base-name> [< <ref-list> | < <object-list>]"),
@@ -73,7 +80,7 @@ static unsigned long delta_cache_size = 0;
 static unsigned long max_delta_cache_size = 256 * 1024 * 1024;
 static unsigned long cache_max_small_delta_size = 1000;
 
-static unsigned long window_memory_limit = 0;
+static unsigned long window_memory_limit = (unsigned long)-1L;
 
 /*
  * stats
@@ -2554,6 +2561,24 @@ static void get_object_list(int ac, const char **av)
 	sha1_array_clear(&recent_objects);
 }
 
+static void set_default_window_memory_limit(void)
+{
+	uint64_t memsize = sys_memsize();
+
+	window_memory_limit = 0;
+	if (memsize > 0) {
+		memsize /= 3U;
+		if (!delta_search_threads)	/* --threads=0 means autodetect */
+			delta_search_threads = online_cpus();
+		if (delta_search_threads > 1)
+			memsize /= (uint64_t)delta_search_threads;
+		if (memsize > (uint64_t)WINDOW_MEMORY_MAX)
+			window_memory_limit = WINDOW_MEMORY_MAX;
+		else
+			window_memory_limit = (unsigned long)memsize;
+	}
+}
+
 static int option_parse_index_version(const struct option *opt,
 				      const char *arg, int unset)
 {
@@ -2723,9 +2748,13 @@ int cmd_pack_objects(int argc, const char **argv, const char *prefix)
 		delta_search_threads = online_cpus();
 
 #ifdef NO_PTHREADS
-	if (delta_search_threads != 1)
+	if (delta_search_threads != 1) {
+		delta_search_threads = 1;
 		warning("no threads support, ignoring --threads");
+	}
 #endif
+	if (window_memory_limit == (unsigned long)-1L)
+		set_default_window_memory_limit();
 	if (!pack_to_stdout && !pack_size_limit)
 		pack_size_limit = pack_size_limit_cfg;
 	if (pack_to_stdout && pack_size_limit)
---
